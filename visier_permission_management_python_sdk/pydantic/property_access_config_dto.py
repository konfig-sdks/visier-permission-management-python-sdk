# coding: utf-8

"""
    Visier Permission Management APIs

    Visier APIs for managing permissions within an organization

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from visier_permission_management_python_sdk.pydantic.property_access_config_dto_analytic_object_reference_paths import PropertyAccessConfigDTOAnalyticObjectReferencePaths

class PropertyAccessConfigDTO(BaseModel):
    # The property ID associated with the property access configuration.
    property_id: typing.Optional[str] = Field(None, alias='propertyId')

    # The analytic object ID of the property.
    analytic_object_id: typing.Optional[str] = Field(None, alias='analyticObjectId')

    analytic_object_reference_paths: typing.Optional[PropertyAccessConfigDTOAnalyticObjectReferencePaths] = Field(None, alias='analyticObjectReferencePaths')

    # The access level of the property. Valid values are: Aggregate, Sensitive
    access_level: typing.Optional[Literal["None", "Aggregate", "Detailed"]] = Field(None, alias='accessLevel')
    class Config:
        arbitrary_types_allowed = True
