# coding: utf-8

"""
    Visier Permission Management APIs

    Visier APIs for managing permissions within an organization

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from visier_permission_management_python_sdk.pydantic.admin_capability_config_dto import AdminCapabilityConfigDTO
from visier_permission_management_python_sdk.pydantic.data_security_profile_dto import DataSecurityProfileDTO
from visier_permission_management_python_sdk.pydantic.role_modules_config_dto import RoleModulesConfigDTO

class PermissionDTO(BaseModel):
    # A user-defined description of the permission.
    description: typing.Optional[str] = Field(None, alias='description')

    # The unique identifier associated with the permission.
    permission_id: typing.Optional[str] = Field(None, alias='permissionId')

    # An identifiable permission name to display in Visier, such as \"Diversity Access\".
    display_name: typing.Optional[str] = Field(None, alias='displayName')

    # A list of objects representing the data security profile configurations associated with the permission.
    data_security_profiles: typing.Optional[typing.List[DataSecurityProfileDTO]] = Field(None, alias='dataSecurityProfiles')

    # The capability configuration associated with the permission.
    admin_capability_config: typing.Optional[AdminCapabilityConfigDTO] = Field(None, alias='adminCapabilityConfig')

    # The role modules configuration associated with the permission.
    role_modules_config: typing.Optional[RoleModulesConfigDTO] = Field(None, alias='roleModulesConfig')
    class Config:
        arbitrary_types_allowed = True
